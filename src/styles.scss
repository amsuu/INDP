@use "sass:map";
@import 'variables';
// @import url('https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200');
@import url('https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0');


// material icons
@font-face {
  font-family: 'Material Symbols Outlined';
  font-style: normal;
  font-weight: 100 700;
  src: url(https://fonts.gstatic.com/s/materialsymbolsoutlined/v154/kJEhBvYX7BgnkSrUwT8OhrdQw4oELdPIeeII9v6oFsI.woff2) format('woff2');
}
.material-symbols-rounded {
  font-family: 'Material Symbols Rounded' !important;
  font-weight: normal !important;
  font-style: normal !important;
  // font-size: 20px !important;
  line-height: 1 !important;
  letter-spacing: normal !important;
  text-transform: none !important;
  display: inline-block !important;
  white-space: nowrap !important;
  word-wrap: normal !important;
  direction: ltr !important;
  font-feature-settings: 'liga' !important;
  -moz-font-feature-settings: 'liga' !important;
  -moz-osx-font-smoothing: grayscale !important;
}


// accessibility
@media (prefers-reduced-motion: no-preference) { html { scroll-behavior: smooth; } }

// touchscreens
@media (hover: none) and (pointer: coarse) {
  *, *::before, *::after {
    transition: all 160ms ease-in-out;
  }
}

// I'm not insane
*, *::before, *::after {
  box-sizing: border-box;
  transition: all 200ms ease-in-out;
}

html {
  scrollbar-width: thin;
  overflow-x: hidden;
}

body {
  display: flex;
  align-items: center;
  justify-content: center;

  margin: 0px;

  font-size: var(--font-size);
  line-height: 1.5;

  background-color: var(--background);
  color: var(--text);
}
// sans vs serif
body, body[font="sans"] {
  font-family: $font-sans;
  * { font-family: $font-sans; }
}
body[font="serif"] {
  font-family: $font-serif; font-weight: medium;
  * { font-family: $font-serif; font-weight: medium; }
}


app-root {
  > * {
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-items: center;

    width: 100%;
  }

  app-settings {
    align-items: flex-start;
  }
}
app-topbar {
  z-index: 100;
  left: 0;
  right: 0;

  background-color: var(--background);
}

// hide topbar on level pages, because there are overlay nav buttons
html, body {
  &:has(app-level1page), &:has(app-level-2-page) {
    app-topbar { display: none; }

    align-items: flex-start;
    height: 100%;
  }
}

main {
  margin-top: 4rem;
  margin-bottom: 5rem;
  padding-left: 2rem;
  padding-right: 2rem;


  > app-level1page {
    height: 100%;
    width: 100%;
  }
}


h1, h2 { text-align: center }
h1 {
  color: var(--accent-text);
  color: var(--accent);
  margin-bottom: 1rem;
}
h2 {
  font-size: calc(var(--font-size) + 8pt);
  font-weight: 500;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
  color: var(--supressed-heading);
}
h3 {
  color: var(--h3-heading);
}

ul { list-style-type: 'â€” '; }
p { text-indent: 2rem; }
hr { margin: 0px 8rem; }
abbr { cursor: help; }
*::selection { background-color: var(--secondary20); }
*[lang="sr"] { font-feature-settings: "ss05"; }
.note { color: var(--h3-heading); }
.i { font-style: italic; }

// cursor pointer
label, button, select, summary, [type=radio], [type=submit], [type=checkbox] { cursor: pointer; }

img {
  max-width: 100%;
  border: solid 0.5rem var(--border);
}

a {
  color: var(--accent);
  text-decoration: underline;
  &:visited {
    color: var(--secondary);
  }
}

// makes use of the ligature in the Vollkorn font
// which is a horizontal line when typing "-.-"
// the problem (i think) is that the Google fonts
// version doesn't have discretionatory ligatures
.vollkorn-hr {
  content: "-.-";
  font-feature-settings: "dlig";
  width: 100%;
  text-align: center;
}


// table
table {
  max-width: 97.5vw !important;
  width: 100% !important;
  overflow-x: scroll;
}

.table-wrapper-no-overflow {
  display: grid;
  overflow-x: scroll;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  background: linear-gradient(to left, var(--border), var(--background) 70%);
}

table, th, td {
  padding: 0.5rem 1rem;
  border: 0.125rem var(--border) solid;
  border-collapse: collapse;

  text-align: center;

  &.accent    { color: var(--accent)    }
  &.primary   { color: var(--primary)   }
  &.secondary { color: var(--secondary) }
}

// I don't even know
.src {
  padding-top: 0rem;
  padding-bottom: 1rem;
  display: block;
  width: 100%;
  font-size: 80%;
  font-style: italic;
  text-align: end;
}

code {
  font-family: $font-mono !important;

  &.inline {
    padding: 0.3rem;
    border-radius: 0.3rem;

    display: inline;

    background-color: var(--secondary20);
  }

  &::selection {
    background-color: var(--secondary);
  }
}


// inputs

select, input[type="checkbox"] {
  font-family: inherit;
  font-size: var(--font-size);

  vertical-align: baseline;
}

select {
  margin: 0px;
  min-height: var(--font-size);
  padding: 0.5rem;
  border-radius: 0.5rem;
  background-color: var(--accent);
  color: var(--background);
  border: none;
}

input[type="checkbox"] {

  height: calc(var(--font-size) / 2);

  aspect-ratio: 1 / 1;

  vertical-align: middle;
}

// buttons
button {
  background-color: var(--background);
  color: var(--text);
  padding: 0.5rem;
  border: none;

  font-size: calc(var(--font-size) * 0.8);
  font-weight: 500;

  &.active {
    background-color: var(--secondary20);
    color: var(--accent);
  }
}
@media (hover: hover) {
  button{

    &:hover {
      background-color: var(--secondary);
    }
    &:active:hover {
      background-color: var(--secondary);
    }
  }
}
button.accent-btn     { background-color: var(--accent);    color: var(--background); }
button.primary-btn    { background-color: var(--primary);   color: var(--background); }
button.secondary-btn  { background-color: var(--secondary); color: var(--background); }



.mobile-only {
  width: 0;
  display: hidden;
}
// phone screens
@media only screen and (max-width: $main-element-width--phone) {
  .mobile-only {
    display: unset;
  }
  .no-mobile {
    display: hidden;
  }
  button {
    font-size: var(--font-size) !important;
    padding: calc(0.5rem * 0.8);  // to compensate for the 0.8 -> 1 font size increase
  }
}


// light mode overrides
body[theme="light"] {
  .level-1-quiz-question-wrapper >div.card-and-title-container div.card-container {
    div.card.answer-card {
      background-color: var(--secondary20) !important;

      input {
        color: var(--text) !important;

        &::placeholder, &::-moz-placeholder, &::-webkit-input-placeholder {
          color: var(--text) !important;
          opacity: 50% !important;
        }
      }
    }

    @media (hover: hover) and (pointer: fine) {
      &.answer-card-container:has(> .answer-button:hover) {
        background-color: var(--accent) !important;

        > .answer-button:hover {
          color: var(--background) !important;
        }
      }
    }

    @media (hover: none) and (pointer: coarse) {
      &.answer-card-container:has(> .answer-button:active) {
        background-color: var(--accent) !important;

        &, * { transition: none; }
        > .answer-button:active { color: var(--background) !important; }
      }
    }
  }
}

// big desktop screens
@media only screen and (min-width: #{$screen-size--desktop}) {
  body { --font-size: 20pt; }
  main { width: #{$main-element-width--desktop}; }
}

// smaller desktop and laptop screens
@media only screen and (min-width: $screen-size--laptop) and (max-width: #{$main-element-width--desktop}) {
  body { --font-size: 20pt; }
  main { width: #{$main-element-width--laptop}; }
}

// tablet screens
@media only screen and (min-width: $main-element-width--phone) and (max-width: $main-element-width--laptop) {
  body {
    --font-size: 18pt;
    --font-size-cards: 8pt;
  }

  main {
    width: 100%;
    padding-left: 1rem;
    padding-right: 1rem;
  }

  app-level1page .overlay button {
    height: 4.5rem !important;
    width: 7rem !important;

    > span { font-size: 2rem !important; }

    &.t { top: 1.4rem !important; }
    &.b { bottom: 1.4rem !important; }
    &.l { left:  2rem !important; }
    &.r { right: 2rem !important; }
  }
}

// bigger screens
@media only screen and (min-width: $main-element-width--phone) {
  ul { list-style-position: inside; }

  app-topbar {
    position: absolute;

    top: 0;
    bottom: unset;

    #topbar > * {
      &.text { display: flex; }
      &.icon { display: none; }
    }
  }
}

@media only screen and (max-width: $screen-size--1080p) {
  body:has(app-theory-learn-page) {
    app-topbar { display: none; }
    main { margin-top: 1.5rem; }
  }
}

// phone screens
@media only screen and (max-width: $main-element-width--phone) {
  body {
    --font-size: 12pt;
    --font-size-topbar: 16pt;
  }
  app-topbar {
    position: fixed;
    top: unset;
    bottom: 0;
  }
  main {
    max-width: 100vw;
    width: 100vw;
    margin-top: 1rem !important;
    margin-bottom: 5rem;
    padding-right: 1rem;
    padding-left: 1rem;
  }

  p {
    text-indent: 1rem;
    font-size: 14pt;
  }
  ul { list-style-position: outside; }

  // light mode overrides
  body[theme="light"] {
    #topbar {
      // shadow for light mode, border for dark mode.
      // (see light mode overrides in styles.scss)
      box-shadow: 0rem 0rem 5rem hsla(var(--hue), var(--border-sl), 0.2);
      border-top: none;
    }
    padding-bottom: 2rem;
  }
}
